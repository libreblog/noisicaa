/*
 * @begin:license
 *
 * Copyright (c) 2015-2019, Benjamin Niemann <pink@odahoda.de>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * @end:license
 */

syntax = "proto2";

package noisicaa.pb;

message RenderSettings {
  optional uint32 block_size = 1 [default=256];
  optional uint32 sample_rate = 2 [default=44100];

  enum OutputFormat {
    FLAC = 1;
    OGG = 2;
    WAVE = 3;
    MP3 = 4;
    FAIL__TEST_ONLY__ = 10000;
  };
  optional OutputFormat output_format = 3 [default=FLAC];

  message FlacSettings {
    // Valid values are 16, 24
    optional uint32 bits_per_sample = 1 [default=16];

    // Valid values are 0 .. 12
    optional uint32 compression_level = 2 [default=5];
  };
  optional FlacSettings flac_settings = 4;

  message OggSettings {
    enum EncodeMode {
      VBR = 1;
      CBR = 2;
    };
    optional EncodeMode encode_mode = 1 [default=VBR];

    // Bitrate in kilobits/s. Only used with encode_mode=CBR.
    // Valid values are 45 .. 500
    optional uint32 bitrate = 2 [default=256];

    // Encoding quality. Only used with encode_mode=VBR.
    // Valid values are -1.0 .. 10.0
    optional float quality = 3 [default=3.0];
  };
  optional OggSettings ogg_settings = 5;

  message WaveSettings {
    // Valid values are 16, 24, 32
    optional uint32 bits_per_sample = 1 [default=16];
  };
  optional WaveSettings wave_settings = 6;

  message Mp3Settings {
    enum EncodeMode {
      VBR = 1;
      CBR = 2;
    };
    optional EncodeMode encode_mode = 1 [default=VBR];

    // Bitrate in kilobits/s.
    // Valid values are 32 .. 320
    optional uint32 bitrate = 2 [default=256];      // Only used with encode_mode=CBR.

    // Encoding quality. Only used with encode_mode=VBR.
    // Valid values are 0 .. 9
    optional uint32 compression_level = 3 [default=5];
  };
  optional Mp3Settings mp3_settings = 7;
}
