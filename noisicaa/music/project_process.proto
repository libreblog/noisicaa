/*
 * @begin:license
 *
 * Copyright (c) 2015-2019, Benjamin Niemann <pink@odahoda.de>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * @end:license
 */

syntax = "proto2";

import "noisicaa/audioproc/public/player_state.proto";
import "noisicaa/music/render_settings.proto";
import "noisicaa/core/session_data.proto";

package noisicaa.music.pb;

message ProjectId {
  optional uint64 project_id = 1;
}

message CreateRequest {
  required string path = 1;
}

message OpenRequest {
  required string path = 1;
}

message CreatePlayerRequest {
  required string client_address = 1;
  required string audioproc_address = 2;
}

message CreatePlayerResponse {
  required string id = 1;
  required string realm = 2;
}

message DeletePlayerRequest {
  required string player_id = 1;
}

message CreatePluginUIRequest {
  required string player_id = 1;
  required string node_id = 2;
}

message CreatePluginUIResponse {
  required uint32 wid = 1;
  required uint32 width = 2;
  required uint32 height = 3;
}

message DeletePluginUIRequest {
  required string player_id = 1;
  required string node_id = 2;
}

message UpdatePlayerStateRequest {
  required string player_id = 1;
  required noisicaa.pb.PlayerState state = 2;
}

message RenderRequest {
  required string callback_address = 1;
  required noisicaa.pb.RenderSettings settings = 2;
}

message SetSessionValuesRequest {
  repeated noisicaa.pb.SessionValue session_values = 1;
}

message SessionDataMutation {
  repeated noisicaa.pb.SessionValue session_values = 1;
}

message RenderProgressRequest {
  required uint32 numerator = 1;
  required uint32 denominator = 2;
}

message RenderProgressResponse {
  required bool abort = 1;
}

message RenderStateRequest {
  required string state = 1;
}

message RenderDataRequest {
  required bytes data = 1;
}

message RenderDataResponse {
  required bool status = 1;
  optional string msg = 2;
}
