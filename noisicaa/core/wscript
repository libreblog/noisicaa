# -*- mode: python -*-

# @begin:license
#
# Copyright (c) 2015-2019, Benjamin Niemann <pink@odahoda.de>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
# @end:license

def build(ctx):
    ctx.py_module('__init__.py')
    ctx.py_module('auto_cleanup_mixin.py')
    ctx.py_module('backend_manager.py')
    ctx.py_test('backend_manager_test.py')
    ctx.py_module('callbacks.py')
    ctx.py_test('callbacks_test.py')
    ctx.py_module('fileutil.py')
    ctx.py_test('fileutil_test.py')
    ctx.py_module('ipc.py')
    ctx.py_test('ipc_test.py')
    ctx.py_test('ipc_perftest.py', tags={'perf'})
    ctx.py_test('perf_stats_test.py')
    ctx.py_module('process_manager.py')
    ctx.py_test('process_manager_test.py')
    ctx.py_module('recordfile.py')
    ctx.py_test('recordfile_test.py')
    ctx.py_test('stats_test.py')
    ctx.py_module('storage.py')
    ctx.py_test('storage_test.py')
    ctx.py_module('threads.py')
    ctx.py_test('threads_test.py')
    ctx.py_module('typing_extra.py')
    ctx.cy_module('perf_stats.pyx', use=['noisicaa-core'])
    ctx.cy_module('logging.pyx', use=['noisicaa-core'])
    ctx.cy_test('logging_test.pyx', use=['noisicaa-core'])
    ctx.cy_module('status.pyx', use=['noisicaa-core'])
    ctx.cy_module('stacktrace.pyx', use=['noisicaa-core'])

    ctx.py_proto('empty_message.proto')
    ctx.py_proto('storage.proto')
    ctx.py_proto('ipc.proto')
    ctx.py_proto('process_manager.proto')
    ctx.py_proto('ipc_test.proto')
    ctx.py_proto('session_data.proto')

    ctx.shlib(
        target='noisicaa-core',
        source=[
            ctx.cpp_module('logging.cpp'),
            ctx.cpp_module('perf_stats.cpp'),
            ctx.cpp_module('refcount.cpp'),
            ctx.cpp_module('status.cpp'),
            ctx.cpp_module('stacktrace.cpp'),
        ],
        use=['UNWIND', 'rtcheck'],
    )

    ctx.recurse('stats')
